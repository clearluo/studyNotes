// Code generated by protoc-gen-go. DO NOT EDIT.
// source: monitor.proto

package monitor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 包含用户名的请求信息
type ReportRequest struct {
	Action               string   `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Time                 int64    `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportRequest) Reset()         { *m = ReportRequest{} }
func (m *ReportRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()    {}
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{0}
}

func (m *ReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequest.Unmarshal(m, b)
}
func (m *ReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequest.Marshal(b, m, deterministic)
}
func (m *ReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequest.Merge(m, src)
}
func (m *ReportRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRequest.Size(m)
}
func (m *ReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequest proto.InternalMessageInfo

func (m *ReportRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ReportRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *ReportRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *ReportRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// 服务端响应信息
type ReportRequestReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportRequestReply) Reset()         { *m = ReportRequestReply{} }
func (m *ReportRequestReply) String() string { return proto.CompactTextString(m) }
func (*ReportRequestReply) ProtoMessage()    {}
func (*ReportRequestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{1}
}

func (m *ReportRequestReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequestReply.Unmarshal(m, b)
}
func (m *ReportRequestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequestReply.Marshal(b, m, deterministic)
}
func (m *ReportRequestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequestReply.Merge(m, src)
}
func (m *ReportRequestReply) XXX_Size() int {
	return xxx_messageInfo_ReportRequestReply.Size(m)
}
func (m *ReportRequestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequestReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequestReply proto.InternalMessageInfo

func (m *ReportRequestReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReportRequestReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*ReportRequest)(nil), "monitor.ReportRequest")
	proto.RegisterType((*ReportRequestReply)(nil), "monitor.ReportRequestReply")
}

func init() { proto.RegisterFile("monitor.proto", fileDescriptor_44174b7b2a306b71) }

var fileDescriptor_44174b7b2a306b71 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xb1, 0x0b, 0x82, 0x50,
	0x10, 0xc6, 0x33, 0x4d, 0xe9, 0x40, 0x88, 0x1b, 0xe4, 0x51, 0x8b, 0x38, 0x39, 0x39, 0xd4, 0xd6,
	0xd2, 0x1e, 0xb4, 0xbc, 0xff, 0xc0, 0xf4, 0x11, 0x42, 0x7a, 0xa6, 0xd7, 0xd0, 0x7f, 0x1f, 0x77,
	0xda, 0x20, 0xb4, 0xfd, 0xee, 0xc7, 0xe3, 0xfb, 0xde, 0x07, 0x71, 0x4b, 0x5d, 0xc3, 0x34, 0x14,
	0xfd, 0x40, 0x4c, 0x18, 0xcd, 0x67, 0x56, 0x41, 0x6c, 0x5d, 0x4f, 0x03, 0x5b, 0xf7, 0x7a, 0xbb,
	0x91, 0x31, 0x81, 0xb0, 0xac, 0xb8, 0xa1, 0xce, 0x78, 0xa9, 0x97, 0x6f, 0xed, 0x7c, 0x21, 0x42,
	0xd0, 0x51, 0xed, 0xcc, 0x5a, 0xad, 0xb2, 0xb8, 0xba, 0xe4, 0xd2, 0xf8, 0x93, 0x13, 0x16, 0xc7,
	0x4d, 0xeb, 0x4c, 0x90, 0x7a, 0xb9, 0x6f, 0x95, 0xb3, 0x33, 0xe0, 0xa2, 0xc4, 0xba, 0xfe, 0xf9,
	0x91, 0x97, 0x95, 0x24, 0x4a, 0xcf, 0xc6, 0x2a, 0xe3, 0x0e, 0xfc, 0x76, 0x7c, 0xcc, 0x25, 0x82,
	0xc7, 0x2b, 0x44, 0xb7, 0xe9, 0xaf, 0x78, 0x81, 0x70, 0x8a, 0xc1, 0xa4, 0xf8, 0xcd, 0x59, 0xe4,
	0xee, 0x0f, 0xff, 0xbd, 0xf6, 0x65, 0xab, 0x7b, 0xa8, 0xe3, 0x4f, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x54, 0xc6, 0x12, 0xc5, 0x0d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitorClient is the client API for Monitor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorClient interface {
	// 服务端返馈信息方法
	Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*ReportRequestReply, error)
}

type monitorClient struct {
	cc *grpc.ClientConn
}

func NewMonitorClient(cc *grpc.ClientConn) MonitorClient {
	return &monitorClient{cc}
}

func (c *monitorClient) Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*ReportRequestReply, error) {
	out := new(ReportRequestReply)
	err := c.cc.Invoke(ctx, "/monitor.Monitor/Report", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorServer is the server API for Monitor service.
type MonitorServer interface {
	// 服务端返馈信息方法
	Report(context.Context, *ReportRequest) (*ReportRequestReply, error)
}

// UnimplementedMonitorServer can be embedded to have forward compatible implementations.
type UnimplementedMonitorServer struct {
}

func (*UnimplementedMonitorServer) Report(ctx context.Context, req *ReportRequest) (*ReportRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Report not implemented")
}

func RegisterMonitorServer(s *grpc.Server, srv MonitorServer) {
	s.RegisterService(&_Monitor_serviceDesc, srv)
}

func _Monitor_Report_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorServer).Report(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitor.Monitor/Report",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorServer).Report(ctx, req.(*ReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Monitor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitor.Monitor",
	HandlerType: (*MonitorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Report",
			Handler:    _Monitor_Report_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}
